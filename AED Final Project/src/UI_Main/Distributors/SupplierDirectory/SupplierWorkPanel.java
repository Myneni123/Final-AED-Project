/*
 * AdminWorkAreaJPanel.java
 *
 * 
 */
package UI_Main.Distributors.SupplierDirectory;

import Business.Clinicarea.PharmacyWork;
import UI_Main.HospitalArea.Clinic.*;
import Business_Frame.MainSystem;
import UI_Main.Hospital_class.*;
import Business.EnterpriseFrame.Enterprise;
import Business.OrganizationFrame.Clinical_Organization;
import Business.OrganizationFrame.Organization;
import Business.OrganizationFrame.Supplier_Org;
import Business.SupplierArea.Supplier;
import Business.SupplierArea.Vaccine;
import Business.UserHaandle.UserHandle;
import Business.WorkLoad.PharmacyW_Request;
import Business.WorkLoad.SupplierW_Request;
import Business.WorkLoad.Work_Queue;
import Business.WorkLoad.Work_Request;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Validation.Validation;

/**
 *
 * @author Admin
 */
public class SupplierWorkPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    UserHandle account;
    Supplier_Org organization;
    Enterprise enterprise;
    MainSystem business;
    Supplier s;

    /**
     * Creates new setup AdminWorkAreaJPanel
     */
    public SupplierWorkPanel(JPanel userProcessContainer, UserHandle account, Supplier_Org organization, Enterprise enterprise, MainSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.account = account;
        this.business = business;
        this.organization = organization;
        for (Supplier supplier : organization.getSupplierList().getSupplierList()) {
            if (account.getEmployee().getName().equals(supplier.getSupplierName())) {
                s = supplier;
                System.out.println("supplier_name" + s.getSupplierName());
            }
        }
        System.out.println("bus" + business.getWorkQueue().getWorkRequestList().size());
        if (s.getWorkQueue() == null) {
            Work_Queue w = new Work_Queue();
            s.setWorkQueue(w);
        }
        populateCombo();
        populateWorkQueueTable();
        populateAvailable();
    }

    public void populateCombo() {
        for (Vaccine vaccine : business.getVaccineList().getVaccineList()) {
            combolstVaccineName.addItem(vaccine);
        }

    }

    public void populateWorkQueueTable() {
        DefaultTableModel model = (DefaultTableModel) tblVaccineRequest.getModel();

        model.setRowCount(0);

        for (Work_Request work : s.getWorkQueue().getWorkRequestList()) {
            if (work instanceof SupplierW_Request) {
                Object[] row = new Object[5];
                row[0] = work.getVaccine().getVaccineName();
                row[1] = ((SupplierW_Request) work).getQuantity();
                row[2] = work;
                row[3] = work.getReceiver();
                row[4] = work.getSender();
                model.addRow(row);
            }
        }
    }

    public void populateAvailable() {
        DefaultTableModel model = (DefaultTableModel) tblVaccineAvailable.getModel();

        model.setRowCount(0);

        for (Vaccine vaccine : s.getVaccineList().getVaccineList()) {

            Object[] row = new Object[2];
            row[0] = vaccine.getVaccineName();
            row[1] = vaccine.getQuantity();
            model.addRow(row);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSupplier = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        btnCompleteSupplier = new javax.swing.JButton();
        btnAssign = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVaccineAvailable = new javax.swing.JTable();
        lblVaccineRequested = new javax.swing.JLabel();
        lblVaccinesAvailable = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVaccineRequest = new javax.swing.JTable();
        combolstVaccineName = new javax.swing.JComboBox();
        tfieldQuantity = new javax.swing.JTextField();
        lblVaccineName = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();
        btnVaccineAdd = new javax.swing.JButton();
        btnDeleteRequest = new javax.swing.JButton();
        lblImage = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblSupplier.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblSupplier.setText("Supplier Admin Work Area");
        add(lblSupplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, -1, -1));
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, 130, 20));

        btnCompleteSupplier.setText("Complete Request");
        btnCompleteSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompleteSupplierActionPerformed(evt);
            }
        });
        add(btnCompleteSupplier, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 210, 140, -1));

        btnAssign.setText("Assign Request To Me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 210, 180, -1));

        tblVaccineAvailable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Name", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(tblVaccineAvailable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 350, 500, 90));

        lblVaccineRequested.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblVaccineRequested.setText("Vaccines Requested");
        add(lblVaccineRequested, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 170, 30));

        lblVaccinesAvailable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblVaccinesAvailable.setText("Vaccines Available");
        add(lblVaccinesAvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, 150, 30));

        tblVaccineRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Name", "Quantity", "Status", "Receiver", "Sender"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblVaccineRequest);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 500, 90));

        combolstVaccineName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combolstVaccineNameActionPerformed(evt);
            }
        });
        add(combolstVaccineName, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 290, 120, -1));

        tfieldQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfieldQuantityActionPerformed(evt);
            }
        });
        tfieldQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfieldQuantityKeyPressed(evt);
            }
        });
        add(tfieldQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 290, 100, -1));

        lblVaccineName.setText("Vaccine Name:");
        add(lblVaccineName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, 90, 20));

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, -1));

        btnVaccineAdd.setText("Add Vaccine");
        btnVaccineAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVaccineAddActionPerformed(evt);
            }
        });
        add(btnVaccineAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 290, 110, -1));

        btnDeleteRequest.setText("Delete request");
        btnDeleteRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRequestActionPerformed(evt);
            }
        });
        add(btnDeleteRequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, -1, -1));

        lblImage.setIcon(new javax.swing.ImageIcon("C:\\Users\\bhema\\Downloads\\aedsup3.jpg")); // NOI18N
        add(lblImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(-50, 0, 680, 530));

        jLabel2.setText("Quantity");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 290, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCompleteSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompleteSupplierActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblVaccineRequest.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to assign the account", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            SupplierW_Request p = (SupplierW_Request) tblVaccineRequest.getValueAt(selectedRow, 2);
                int temp=0;
            if (p.getReceiver() != null) {
                if (p.getStatus().equals("Pending")) {
                    UserHandle a = p.getSender();
                    if (s.getVaccineList().getVaccineList().size() <= 0) {
                        JOptionPane.showMessageDialog(null, "No Stock available. Request from Supplier");
                        return;
                    }
                    for (Vaccine v : s.getVaccineList().getVaccineList()) {
                        if (p.getVaccine().getVaccineName().equals(v.getVaccineName())) {
                            if (v.getQuantity() - p.getQuantity() < 0) {
                                JOptionPane.showMessageDialog(null, "No enough Vaccines for supply. Wait for sometime");
                                return;
                            }
                            temp=1;
                            v.setQuantity(v.getQuantity() - p.getQuantity());
                            break;
                        }
                        
                    }
                    if(temp==0){
            JOptionPane.showMessageDialog(null, "No Stock available. Request from Supplier.");
                       return; 
        }
                    
                    
                    
                    p.setStatus("Complete");
                    JOptionPane.showMessageDialog(null, "You have successfully completed the request");
                    populateWorkQueueTable();
                    populateAvailable();
                } else {
                    JOptionPane.showMessageDialog(null, "You cannot complete it two times.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please assign first");
            }

        }
    }//GEN-LAST:event_btnCompleteSupplierActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        int selectedRow = tblVaccineRequest.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to assign the account", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            SupplierW_Request p = (SupplierW_Request) tblVaccineRequest.getValueAt(selectedRow, 2);

            p.setStatus("Pending");
            p.setReceiver(account);

            populateWorkQueueTable();

        }
//        SupplierWorkRequest request= new SupplierWorkRequest();
//        request.setVaccine((Vaccine)comboVaccine.getSelectedItem());
//        request.setQuantity(Integer.parseInt(txtquant.getText()));
//        request.setStatus("Requested");
//        request.setSender(account);
//        //organization.getWorkQueue().getWorkRequestList().add(request);
//        s.getWorkQueue().getWorkRequestList().add(request);
//        populateWorkQueueTable();

    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed

        new SupplierWorkPanel(userProcessContainer, account, organization, enterprise, business);
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnVaccineAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVaccineAddActionPerformed
        // TODO add your handling code here:
        if(!tfieldQuantity.getText().equals("")){
        int quant = Integer.parseInt(tfieldQuantity.getText());
        Vaccine v = (Vaccine) combolstVaccineName.getSelectedItem();
        int temp = 0;
        for (Vaccine vaccine : s.getVaccineList().getVaccineList()) {
            if (v.getVaccineName().equals(vaccine.getVaccineName())) {
                temp = 1;
                vaccine.setQuantity(vaccine.getQuantity() + quant);
            }
        }

        if (temp == 0) {
            Vaccine vac = s.getVaccineList().addVaccine();
            vac.setQuantity(quant);
            vac.setDisease(v.getDisease());
            vac.setVaccineName(v.getVaccineName());
        }
        populateAvailable();
      }else{
             JOptionPane.showMessageDialog(null, "Enter value", "Warning", JOptionPane.WARNING_MESSAGE);
        }
  
    }//GEN-LAST:event_btnVaccineAddActionPerformed

    private void btnDeleteRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRequestActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblVaccineRequest.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to delete the account", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            PharmacyW_Request p = (PharmacyW_Request) tblVaccineRequest.getValueAt(selectedRow, 2);

            s.getWorkQueue().getWorkRequestList().remove(p);
            business.getWorkQueue().getWorkRequestList().remove(p);

            JOptionPane.showMessageDialog(null, "You have successfully deleted the account");
            populateWorkQueueTable();
        }
    }//GEN-LAST:event_btnDeleteRequestActionPerformed

    private void tfieldQuantityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfieldQuantityKeyPressed
        // TODO add your handling code here:
        Validation.onlyInteger(evt, tfieldQuantity);
    }//GEN-LAST:event_tfieldQuantityKeyPressed

    private void combolstVaccineNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combolstVaccineNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combolstVaccineNameActionPerformed

    private void tfieldQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfieldQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfieldQuantityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnCompleteSupplier;
    private javax.swing.JButton btnDeleteRequest;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnVaccineAdd;
    private javax.swing.JComboBox combolstVaccineName;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblSupplier;
    private javax.swing.JLabel lblVaccineName;
    private javax.swing.JLabel lblVaccineRequested;
    private javax.swing.JLabel lblVaccinesAvailable;
    private javax.swing.JTable tblVaccineAvailable;
    private javax.swing.JTable tblVaccineRequest;
    private javax.swing.JTextField tfieldQuantity;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables

}
