/*
 * AdminWorkPanel.java
 *
 * 
 */

package UI_Main.Hospital.Clinic.PharmacyArea;

import Business.Clinicarea.PharmacyWork;
import UI_Main.HospitalArea.Clinic.*;
import Business_Frame.MainSystem;
import Business.EmployeeArea.Employeeclass;
import UI_Main.Hospital_class.*;
import Business.EnterpriseFrame.Enterprise;
import Business.NetworkArea.NetworkArea;
import Business.OrganizationFrame.Clinical_Organization;
import Business.OrganizationFrame.Organization;
import Business.SupplierArea.Vaccine;
import Business.UserHaandle.UserHandle;
import Business.WorkLoad.PharmacyW_Request;
import Business.WorkLoad.Work_Request;
import java.awt.CardLayout;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Validation.Validation;

/**
 *
 * @author  admin
 */
public class PharmacyWorkPanel extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
    UserHandle account; 
    Clinical_Organization organization; 
    Enterprise enterprise; 
    MainSystem business;
    
    /** Creates new setup AdminWorkPanel */
    public PharmacyWorkPanel(JPanel userProcessContainer, UserHandle account, Clinical_Organization organization, Enterprise enterprise, MainSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.account=account;
        this.business=business;
        this.organization= organization;
        populateCombo();
        populateQuantity();
       populateWorkQueueTable();
       populateAvailable();
       
    }
    
    public void populateCombo(){
        for (Vaccine vaccine : business.getVaccineList().getVaccineList()) {
            vaccineCombo.addItem(vaccine);
        }
        
    }
    public void populateWorkQueueTable(){
         DefaultTableModel model = (DefaultTableModel) VaccineReqTable.getModel();
        
        model.setRowCount(0);
        
        for (Work_Request work : organization.getWorkQueue().getWorkRequestList()){
           if(work instanceof PharmacyW_Request){ 
            Object[] row = new Object[4];
            row[0] = work.getVaccine().getVaccineName();
            row[1] = ((PharmacyW_Request) work).getQuantity();
            row[2] = work;
            row[3] = work.getReceiver();
            model.addRow(row);
           }
        }
    }
     public void populateAvailable(){
         DefaultTableModel model = (DefaultTableModel) VaccineAvailableTable.getModel();
        
        model.setRowCount(0);
        PharmacyWork p= organization.getP();
         System.out.println("pharmacy"+ p.getVaccine().getVaccineList().size());
        for (Vaccine vaccine : p.getVaccine().getVaccineList()){
          
            Object[] row = new Object[2];
            row[0] = vaccine.getVaccineName();
            row[1] = vaccine.getQuantity();
            model.addRow(row);
           
        }
    }
     public void populateQuantity(){
         
         for ( Work_Request workRequest : account.getWorkQueue().getWorkRequestList()) {
            // HashMap<WorkRequest,Integer> map = new HashMap<WorkRequest,Integer>();
             int temp=0;
             PharmacyW_Request p= (PharmacyW_Request) workRequest;
             if(workRequest.getStatus().equals("Complete") && !p.isAdd() ){ //&& add == false
                 Vaccine v = workRequest.getVaccine();
                
                  for (Vaccine vaccine : organization.getP().getVaccine().getVaccineList()) {
                     if(v.getVaccineName().equals(vaccine.getVaccineName())){
                         temp=1;
                          vaccine.setQuantity(p.getQuantity()+vaccine.getQuantity());
                     }
                     
                 }
                  if(temp==0){
                       Vaccine vac= organization.getP().getVaccine().addVaccine();
                       vac.setDisease(v.getDisease());
                       vac.setVaccineName(v.getVaccineName());
                       vac.setQuantity(p.getQuantity());
                   }
                 p.setAdd(true); 
             }
         }
        
     }
    
    /** To initialize the form,the method is invoked within the constructor 
     * 
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblPharmacy = new javax.swing.JLabel();
        reqBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        VaccineAvailableTable = new javax.swing.JTable();
        lblReqVaccine = new javax.swing.JLabel();
        lblVacAvailable = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        VaccineReqTable = new javax.swing.JTable();
        vaccineCombo = new javax.swing.JComboBox();
        Quanttxt = new javax.swing.JTextField();
        lblVacname = new javax.swing.JLabel();
        btnDeleteReq = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 153, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPharmacy.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblPharmacy.setText("Pharmacy Work  -Admin");
        add(lblPharmacy, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, -1, -1));

        reqBtn.setText("Request Vaccine");
        reqBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqBtnActionPerformed(evt);
            }
        });
        add(reqBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 480, 130, -1));

        VaccineAvailableTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Name", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(VaccineAvailableTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 310, -1, 90));

        lblReqVaccine.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblReqVaccine.setText("Vaccines Requested");
        add(lblReqVaccine, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 170, 30));

        lblVacAvailable.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblVacAvailable.setText(" Available Vaccines");
        add(lblVacAvailable, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, 150, 30));

        VaccineReqTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vaccine Name", "Quantity", "Status", "Receiver"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(VaccineReqTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, 90));

        add(vaccineCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 430, 120, -1));

        Quanttxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                QuanttxtKeyPressed(evt);
            }
        });
        add(Quanttxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 430, 120, -1));

        lblVacname.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblVacname.setText("Vaccine Name:");
        add(lblVacname, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, 90, 20));

        btnDeleteReq.setText("Delete Vaccine request");
        btnDeleteReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteReqActionPerformed(evt);
            }
        });
        add(btnDeleteReq, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/aed11.png"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 580, 520));

        jLabel3.setText("jLabel3");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 40, -1, -1));

        jLabel4.setText("jLabel4");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void reqBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqBtnActionPerformed
         if(!Quanttxt.getText().equals("")){
        PharmacyW_Request request= new PharmacyW_Request();
        request.setVaccine((Vaccine)vaccineCombo.getSelectedItem());
        request.setQuantity(Integer.parseInt(Quanttxt.getText()));
        request.setStatus("Requested");
        request.setSender(account);
        organization.getWorkQueue().getWorkRequestList().add(request);
        account.getWorkQueue().getWorkRequestList().add(request);
        business.getWorkQueue().getWorkRequestList().add(request);
        populateWorkQueueTable();
        }else{
             JOptionPane.showMessageDialog(null, "Enter valid value", "Warning", JOptionPane.WARNING_MESSAGE);
        }

        
    }//GEN-LAST:event_reqBtnActionPerformed

    private void btnDeleteReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteReqActionPerformed
        // TODO add your handling code here:
        int selectedRow= VaccineReqTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null, "Please select a valid row to delete the account", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{

            Work_Request p=(Work_Request) VaccineReqTable.getValueAt(selectedRow, 2);

           // s.getWorkQueue().getWorkRequestList().remove(p);
            organization.getWorkQueue().getWorkRequestList().remove(p);
            account.getWorkQueue().getWorkRequestList().remove(p);
            business.getWorkQueue().getWorkRequestList().remove(p);
            JOptionPane.showMessageDialog(null, "Account is deleted successfully");
            populateWorkQueueTable();
        }
    }//GEN-LAST:event_btnDeleteReqActionPerformed

    private void QuanttxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_QuanttxtKeyPressed
        // TODO add your handling code here:
        Validation.onlyInteger(evt, Quanttxt);
    }//GEN-LAST:event_QuanttxtKeyPressed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Quanttxt;
    private javax.swing.JTable VaccineAvailableTable;
    private javax.swing.JTable VaccineReqTable;
    private javax.swing.JButton btnDeleteReq;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblPharmacy;
    private javax.swing.JLabel lblReqVaccine;
    private javax.swing.JLabel lblVacAvailable;
    private javax.swing.JLabel lblVacname;
    private javax.swing.JButton reqBtn;
    private javax.swing.JComboBox vaccineCombo;
    // End of variables declaration//GEN-END:variables
    
}
