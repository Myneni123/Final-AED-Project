/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UI_Main.AdministrativeWorkArea;

import Business_Frame.MainSystem;
import Business.EmployeeArea.Employeeclass;
import Business.EnterpriseFrame.Enterprise;
import Business.NetworkArea.NetworkArea;
import Business.Role.C2DRole;
import Business.Role.DistributorRole;
import Business.Role.HospitalRole;
import Business.UserHaandle.UserHandle;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Validation.Validation;

/*
 *
 * @author admin
 */
public class EnterpriseAdminPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private MainSystem sys;

    /**
     * Creates new form from EnterprisePanel
     */
    public EnterpriseAdminPanel(JPanel userProcessContainer,  MainSystem sys) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.sys = sys;

        populateTable();
        populateNetworkComboBox();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblEnterprise.getModel();

        model.setRowCount(0);
        for (NetworkArea networkarea : sys.getNetworkList()) {
            for (Enterprise enterprise : networkarea.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserHandle userHandle : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[3];
                    row[0] = enterprise.getName();
                    row[1] = networkarea.getName();
                    row[2] = userHandle;

                    model.addRow(row);
                }
            }
        }
    }

    private void populateNetworkComboBox() {
        comboxNetwork.removeAllItems();

        for (NetworkArea networkarea : sys.getNetworkList()) {
            comboxNetwork.addItem(networkarea);
        }
    }

    private void populateEnterpriseComboBox(NetworkArea networkarea) {
        comboxEnterprise.removeAllItems();

        for (Enterprise enterprise : networkarea.getEnterpriseDirectory().getEnterpriseList()) {
            comboxEnterprise.addItem(enterprise);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblEnterprise = new javax.swing.JTable();
        lblNetwork = new javax.swing.JLabel();
        comboxNetwork = new javax.swing.JComboBox();
        lblUsername = new javax.swing.JLabel();
        tfieldUsername = new javax.swing.JTextField();
        lblEnterprise = new javax.swing.JLabel();
        comboxEnterprise = new javax.swing.JComboBox();
        btnSubmit = new javax.swing.JButton();
        lblPassword = new javax.swing.JLabel();
        tfieldName = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        tfieldPassword = new javax.swing.JPasswordField();
        btnBack = new javax.swing.JButton();
        btnDeleteRequest = new javax.swing.JButton();
        tfieldEmail = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblEnterprise.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Enterprise Name", "Network", "Username"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEnterprise);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, 523, 95));

        lblNetwork.setForeground(new java.awt.Color(255, 255, 255));
        lblNetwork.setText("Network");
        add(lblNetwork, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, -1));

        comboxNetwork.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboxNetwork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboxNetworkActionPerformed(evt);
            }
        });
        add(comboxNetwork, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 136, -1));

        lblUsername.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername.setText("Username");
        add(lblUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, -1));
        add(tfieldUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 136, -1));

        lblEnterprise.setForeground(new java.awt.Color(255, 255, 255));
        lblEnterprise.setText("Enterprise");
        add(lblEnterprise, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 60, -1, -1));

        comboxEnterprise.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(comboxEnterprise, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 60, 136, -1));

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 200, -1, -1));

        lblPassword.setForeground(new java.awt.Color(255, 255, 255));
        lblPassword.setText("Password");
        add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 110, -1, 20));

        tfieldName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfieldNameKeyPressed(evt);
            }
        });
        add(tfieldName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 160, 136, -1));

        lblName.setForeground(new java.awt.Color(255, 255, 255));
        lblName.setText("Name");
        add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, -1, -1));
        add(tfieldPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 110, 140, -1));

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        btnDeleteRequest.setText("Delete request");
        btnDeleteRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRequestActionPerformed(evt);
            }
        });
        add(btnDeleteRequest, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 380, -1, -1));

        tfieldEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfieldEmailActionPerformed(evt);
            }
        });
        add(tfieldEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 150, 140, -1));

        lblEmail.setForeground(new java.awt.Color(255, 255, 255));
        lblEmail.setText("Email");
        add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 160, -1, -1));

        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/aedsup3.jpg"))); // NOI18N
        add(lblImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 680, 520));
    }// </editor-fold>//GEN-END:initComponents

    private void comboxNetworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboxNetworkActionPerformed

        NetworkArea networkarea = (NetworkArea) comboxNetwork.getSelectedItem();
        if (networkarea != null) {
            populateEnterpriseComboBox(networkarea);
        }


    }//GEN-LAST:event_comboxNetworkActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        if(!tfieldName.getText().equals("")){
        Enterprise enterprise = (Enterprise) comboxEnterprise.getSelectedItem();

        String username = tfieldUsername.getText();
        String password = String.valueOf(tfieldPassword.getPassword());
        String name = tfieldName.getText();
        String emailId = tfieldEmail.getText();

        Employeeclass employeeclass = enterprise.getEmployeeDirectory().createEmployee(name);
        if (MainSystem.checkIfUsernameIsUnique(username)) {
            UserHandle account = null;
            if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.CDC) {
                account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employeeclass, new C2DRole());
            } else if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.Distributor) {
                account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employeeclass, new DistributorRole());
            } else if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.Hospital) {
                account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employeeclass, new HospitalRole());
            }
            EmailService emailService = new EmailService();
            try {
              String body = "Enterprise Admin Account for " + name + " created successfully with username "
                      + username;
              emailService.sendMail(emailId, "Enterprise Admin Account Created successfully", body);
              JOptionPane.showMessageDialog(null, "Email sent to Enterprise Admin successfully");
          } catch (Exception ex) {
              System.out.println("Error while sending email to enterprise admin");
          }
            populateTable();
        }
        else {
            JOptionPane.showMessageDialog(null, "Please enter a valid username", "Warning", JOptionPane.WARNING_MESSAGE);
        }
 }else{
             JOptionPane.showMessageDialog(null, "Enter a value", "Warning", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        AdminWorkPanel sysAdminwjp = (AdminWorkPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRequestActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblEnterprise.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row for deleting the account", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            UserHandle p = (UserHandle) tblEnterprise.getValueAt(selectedRow, 2);

            for (NetworkArea networkarea : sys.getNetworkList()) {
                for (Enterprise enterprise : networkarea.getEnterpriseDirectory().getEnterpriseList()) {
                    for (UserHandle userHandle : enterprise.getUserAccountDirectory().getUserAccountList()) {
                        if (p == userHandle) {
                            enterprise.getUserAccountDirectory().getUserAccountList().remove(p);
                            break;
                        }

                    }
                }
            }

            JOptionPane.showMessageDialog(null, "Account deleted successfully");
            populateTable();
        }
    }//GEN-LAST:event_btnDeleteRequestActionPerformed

    private void tfieldNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfieldNameKeyPressed
        // TODO add your handling code here:
        Validation.onlyString(evt, tfieldName);
    }//GEN-LAST:event_tfieldNameKeyPressed

    private void tfieldEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfieldEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfieldEmailActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteRequest;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox comboxEnterprise;
    private javax.swing.JComboBox comboxNetwork;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEnterprise;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNetwork;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTable tblEnterprise;
    private javax.swing.JTextField tfieldEmail;
    private javax.swing.JTextField tfieldName;
    private javax.swing.JPasswordField tfieldPassword;
    private javax.swing.JTextField tfieldUsername;
    // End of variables declaration//GEN-END:variables
}
