/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UI_Main.Hospital_class;

import UI_Main.AdministrativeWorkArea.*;
import Business.EmployeeArea.Employeeclass;
import Business.OrganizationFrame.Organization;
import Business.OrganizationFrame.OrganizationDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Validation.Validation;

/**
 *
 * @author admin
 */
public class HospitalManageEmployeePanel extends javax.swing.JPanel {

    private OrganizationDirectory organizationDir;
    private JPanel userProcessContainer;
    
    /**
     * Creates new setup ManageOrganizationJPanel
     */
    public HospitalManageEmployeePanel(JPanel userProcessContainer,OrganizationDirectory organizationDir) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organizationDir = organizationDir;
        
        populateOrganizationComboBox();
        populateOrganizationEmpComboBox();
    }
    
    public void populateOrganizationComboBox(){
        OrghospitalJComboBox.removeAllItems();
        
        for (Organization organization : organizationDir.getOrganizationList()){
            OrghospitalJComboBox.addItem(organization);
        }
    }
    
    public void populateOrganizationEmpComboBox(){
        organizationEmpJComboBox.removeAllItems();
        
        for (Organization organization : organizationDir.getOrganizationList()){
            organizationEmpJComboBox.addItem(organization);
        }
    }

    private void populateTable(Organization organization){
        DefaultTableModel model = (DefaultTableModel) HospitalorgJTable.getModel();
        
        model.setRowCount(0);
        
        for (Employeeclass employee : organization.getEmployeeDirectory().getEmployeeList()){
            Object[] row = new Object[2];
            row[0] = employee.getId();
            row[1] = employee.getName();
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        HospitalorgJTable = new javax.swing.JTable();
        HospitalCreateJButton = new javax.swing.JButton();
        OrghospitalJComboBox = new javax.swing.JComboBox();
        lblHospitalOrg = new javax.swing.JLabel();
        HosipitalbackJButton = new javax.swing.JButton();
        lblHospitalName = new javax.swing.JLabel();
        nameHospitalJTextField = new javax.swing.JTextField();
        organizationEmpJComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 153, 0));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        HospitalorgJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(HospitalorgJTable);
        if (HospitalorgJTable.getColumnModel().getColumnCount() > 0) {
            HospitalorgJTable.getColumnModel().getColumn(0).setResizable(false);
            HospitalorgJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, 480, 92));

        HospitalCreateJButton.setText("Create Employee");
        HospitalCreateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HospitalCreateJButtonActionPerformed(evt);
            }
        });
        add(HospitalCreateJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 390, -1, -1));

        OrghospitalJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        OrghospitalJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrghospitalJComboBoxActionPerformed(evt);
            }
        });
        add(OrghospitalJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 70, 81, -1));

        lblHospitalOrg.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblHospitalOrg.setText("Organization");
        add(lblHospitalOrg, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 70, -1, -1));

        HosipitalbackJButton.setText("Back");
        HosipitalbackJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HosipitalbackJButtonActionPerformed(evt);
            }
        });
        add(HosipitalbackJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        lblHospitalName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblHospitalName.setText("Name");
        add(lblHospitalName, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 330, 50, 20));

        nameHospitalJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameHospitalJTextFieldKeyPressed(evt);
            }
        });
        add(nameHospitalJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 330, 126, -1));

        organizationEmpJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(organizationEmpJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 270, 81, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Organization");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 270, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/MicrosoftTeams-image (13).png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 230, 230));
    }// </editor-fold>//GEN-END:initComponents

    private void HospitalCreateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HospitalCreateJButtonActionPerformed
         if(!nameHospitalJTextField.getText().equals("")){
        Organization organization = (Organization) organizationEmpJComboBox.getSelectedItem();
        String name = nameHospitalJTextField.getText();
        
        organization.getEmployeeDirectory().createEmployee(name);
         populateTable(organization);
         }else{
             JOptionPane.showMessageDialog(null, "Enter a valid value", "Warning", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_HospitalCreateJButtonActionPerformed

    private void HosipitalbackJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HosipitalbackJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_HosipitalbackJButtonActionPerformed

    private void OrghospitalJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrghospitalJComboBoxActionPerformed
        Organization organization = (Organization) OrghospitalJComboBox.getSelectedItem();
        if (organization != null){
            populateTable(organization);
        }
    }//GEN-LAST:event_OrghospitalJComboBoxActionPerformed

    private void nameHospitalJTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameHospitalJTextFieldKeyPressed
        // TODO add your handling code here:
        Validation.onlyString(evt, nameHospitalJTextField);
    }//GEN-LAST:event_nameHospitalJTextFieldKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton HosipitalbackJButton;
    private javax.swing.JButton HospitalCreateJButton;
    private javax.swing.JTable HospitalorgJTable;
    private javax.swing.JComboBox OrghospitalJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHospitalName;
    private javax.swing.JLabel lblHospitalOrg;
    private javax.swing.JTextField nameHospitalJTextField;
    private javax.swing.JComboBox organizationEmpJComboBox;
    // End of variables declaration//GEN-END:variables
}
