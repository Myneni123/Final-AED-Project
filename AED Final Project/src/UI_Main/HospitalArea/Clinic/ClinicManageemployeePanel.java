/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UI_Main.HospitalArea.Clinic;

import Business_Frame.MainSystem;
import UI_Main.Hospital_class.*;
import Business.EmployeeArea.Employeeclass;
import Business.EnterpriseFrame.Enterprise;
import Business.OrganizationFrame.Clinical_Organization;
import Business.OrganizationFrame.Organization;
import Business.OrganizationFrame.OrganizationDirectory;
import Business.Role.Roles;
import Business.UserHaandle.UserHandle;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Validation.Validation;

/**
 *
 * @author admin
 */
public class ClinicManageemployeePanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    UserHandle account; 
    Clinical_Organization organization; 
    Enterprise enterprise; 
    MainSystem business;
    /**
     * Creates new setup ManageOrganizationJPanel
     */
    public ClinicManageemployeePanel(JPanel userProcessContainer, UserHandle account, Clinical_Organization organization, Enterprise enterprise, MainSystem business) {
        initComponents();
         this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.account=account;
        this.business=business;
        this.organization= organization;
        populateTable(organization);
      //  populateOrganizationComboBox();
       // populateOrganizationEmpComboBox();
    }
    
//    public void populateOrganizationComboBox(){
//        organizationJComboBox.removeAllItems();
//        
//        for (Role role : organization.getSupportedRole()){
//            organizationJComboBox.addItem(role);
//        }
//    }
    
//    public void populateOrganizationEmpComboBox(){
//        organizationEmpJComboBox.removeAllItems();
//        
//        for (Role role : organization.getSupportedRole()){
//            organizationEmpJComboBox.addItem(role);
//        }
//    }

    private void populateTable(Clinical_Organization organization){
        DefaultTableModel model = (DefaultTableModel) ClinicOrgJTable.getModel();
        
        model.setRowCount(0);
        
        for (Employeeclass employee : organization.getEmployeeDirectory().getEmployeeList()){
            
            Object[] row = new Object[2];
            row[0] = employee.getId();
            row[1] = employee.getName();
            model.addRow(row);
        }
    }
    /**
     * To initialize the form,the method is invoked within constructor.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ClinicOrgJTable = new javax.swing.JTable();
        ClinicaddJButton = new javax.swing.JButton();
        ClinicEmpbackJButton = new javax.swing.JButton();
        lblClinicEmpName = new javax.swing.JLabel();
        ClinicnameEmpTextField = new javax.swing.JTextField();
        lblClinicViewEmp = new javax.swing.JLabel();
        lblClinicCreateEmp = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ClinicOrgJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ClinicOrgJTable);
        if (ClinicOrgJTable.getColumnModel().getColumnCount() > 0) {
            ClinicOrgJTable.getColumnModel().getColumn(0).setResizable(false);
            ClinicOrgJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, 480, 120));

        ClinicaddJButton.setText("Create Employee");
        ClinicaddJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClinicaddJButtonActionPerformed(evt);
            }
        });
        add(ClinicaddJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 110, -1, -1));

        ClinicEmpbackJButton.setText(" Back");
        ClinicEmpbackJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClinicEmpbackJButtonActionPerformed(evt);
            }
        });
        add(ClinicEmpbackJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        lblClinicEmpName.setText("Name");
        add(lblClinicEmpName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 40, -1));

        ClinicnameEmpTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ClinicnameEmpTextFieldKeyPressed(evt);
            }
        });
        add(ClinicnameEmpTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, 126, -1));

        lblClinicViewEmp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblClinicViewEmp.setText("View Employee");
        add(lblClinicViewEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 310, 130, 30));

        lblClinicCreateEmp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblClinicCreateEmp.setText("Create Employee");
        add(lblClinicCreateEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 140, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\namra\\Downloads\\aed19.jpg")); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 300, 150));
    }// </editor-fold>//GEN-END:initComponents

    private void ClinicaddJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClinicaddJButtonActionPerformed
         if(!ClinicnameEmpTextField.getText().equals("")){
        //ClinicOrganization organization = (ClinicOrganization) organizationEmpJComboBox.getSelectedItem();
        String name = ClinicnameEmpTextField.getText();
        organization.getEmployeeDirectory().createEmployee(name);
        populateTable(organization);
        }else{
             JOptionPane.showMessageDialog(null, "Enter valid value", "Warning", JOptionPane.WARNING_MESSAGE);
        }

        
    }//GEN-LAST:event_ClinicaddJButtonActionPerformed

    private void ClinicEmpbackJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClinicEmpbackJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_ClinicEmpbackJButtonActionPerformed

    private void ClinicnameEmpTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ClinicnameEmpTextFieldKeyPressed
        // TODO add your handling code here:
        Validation.onlyString(evt, ClinicnameEmpTextField);
    }//GEN-LAST:event_ClinicnameEmpTextFieldKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClinicEmpbackJButton;
    private javax.swing.JTable ClinicOrgJTable;
    private javax.swing.JButton ClinicaddJButton;
    private javax.swing.JTextField ClinicnameEmpTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblClinicCreateEmp;
    private javax.swing.JLabel lblClinicEmpName;
    private javax.swing.JLabel lblClinicViewEmp;
    // End of variables declaration//GEN-END:variables
}
